{"version":3,"sources":["images/github-logo-white.png","redux/slices/contentSlice.js","redux/store.js","utilities/colors.js","components/Result.js","pages/Results.js","components/Video.js","components/VideoInfo.js","pages/VideoScreen.js","components/Navbar.js","pages/Landing.js","App.js","index.js"],"names":["module","exports","contentSlice","createSlice","name","initialState","component","data","reducers","setPageContent","state","action","payload","actions","getPageContent","configureStore","reducer","content","contentReducer","colors","Result","props","videoId","title","thumbnail","channelTitle","openVideo","classes","createUseStyles","resultWrapper","transitionDuration","backgroundColor","cursor","videoImage","width","height","infoWrapper","padding","videoTitle","fontSize","color","fontWeight","marginBottom","useStyles","className","key","onClick","src","url","axios","require","resultsWrapper","display","gridTemplateColumns","gridGap","Results","useState","resultList","setResultList","pageContent","useSelector","dispatch","useDispatch","useEffect","get","params","part","type","q","maxResults","then","res","items","id","filter","result","map","snippet","thumbnails","default","videoWrapper","justifyContent","Video","video","window","innerWidth","innerHeight","frameBorder","allow","allowfullscreen","mozallowfullscreen","msallowfullscreen","oallowfullscreen","webkitallowfullscreen","VideoInfo","videoInfoWrapper","margin","marginTop","titleText","channelText","dateText","descriptionText","channelId","description","publishedAt","publishedDate","moment","slice","format","VideoScreen","videoScreenWrapper","navbarWrapper","flexWrap","titleWrapper","flex","alignItems","flexBasis","fontFamily","searchWrapper","searchForm","searchBar","border","borderBottom","searchButton","repoWrapper","repoLogo","lineHeight","order","Navbar","searchQuery","setSearchQuery","placeholder","onChange","e","target","value","preventDefault","href","styles","githubLogo","Landing","style","App","config","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.c8e5f8d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo-white.47f33e29.png\";","import { createSlice } from '@reduxjs/toolkit';\n\nexport const contentSlice = createSlice({\n  name: 'content',\n  initialState: {\n    component: '',\n    data: '',\n  },\n  reducers: {\n    setPageContent: (state, action) => {\n      state.component = action.payload.component;\n      state.data = action.payload.data;\n    },\n  },\n});\n\nexport const { setPageContent } = contentSlice.actions;\nexport const getPageContent = (state) => state;\n\nexport default contentSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport contentReducer from './slices/contentSlice';\n\nexport default configureStore({\n  reducer: {\n    content: contentReducer,\n  },\n});\n","export const colors = {\n  darkBlue: '#000121',\n  lightBlue: '#092475',\n  beige: '#6D5C55',\n  lightPurple: '#4B2A57',\n  darkPurple: '#341C3A',\n  lemon: '#fff6BD',\n  marroon: '#391306',\n};\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { colors } from '../utilities/colors';\n\nconst Result = (props) => {\n  const { videoId, title, thumbnail, channelTitle, openVideo } = props;\n\n  const useStyles = createUseStyles({\n    resultWrapper: {\n      transitionDuration: '.3s',\n      '&:hover': {\n        backgroundColor: 'rgba(255, 255, 255, .5)',\n        cursor: 'pointer',\n      },\n    },\n    videoImage: {\n      width: '100%',\n      height: 'auto',\n    },\n    infoWrapper: {\n      padding: '5px;',\n    },\n    videoTitle: {\n      fontSize: '20px',\n      color: colors.lemon,\n      fontWeight: 'bold',\n      marginBottom: '5px',\n    },\n    channelTitle: {\n      fontSize: '18px',\n      color: colors.beige,\n    },\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div\n      className={classes.resultWrapper}\n      key={videoId}\n      onClick={() => openVideo(videoId)}\n    >\n      <img src={thumbnail.url} className={classes.videoImage} />\n\n      <div className={classes.infoWrapper}>\n        <div className={classes.videoTitle}>{title}</div>\n        <div className={classes.channelTitle}>{channelTitle}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createUseStyles } from 'react-jss'\nimport { getPageContent, setPageContent } from '../redux/slices/contentSlice'\nimport { mockResults } from '../mockResults'\nimport Result from '../components/Result'\nimport { colors } from '../utilities/colors'\nconst axios = require('axios')\n\nconst useStyles = createUseStyles({\n  //! Mobile styling\n  resultsWrapper: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    gridGap: '5px',\n    padding: '5px',\n    backgroundColor: colors.marroon\n  },\n  //! Tablet styling - 768px and above\n  '@media screen and (min-width: 768px) and (max-width: 991px)': {\n    resultsWrapper: {\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr',\n      gridGap: '5px',\n      padding: '5px'\n    }\n  },\n  //! Laptop/desktop styling - 992px and above\n  '@media screen and (min-width: 992px)': {\n    resultsWrapper: {\n      gridTemplateColumns: '1fr 1fr 1fr 1fr'\n    }\n  }\n})\n\nconst Results = (props) => {\n  const [resultList, setResultList] = useState([])\n  const pageContent = useSelector(getPageContent)\n  const dispatch = useDispatch()\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (!pageContent.content.data) return\n    axios\n      .get('https://www.googleapis.com/youtube/v3/search', {\n        params: {\n          key: 'AIzaSyAilhuSrXSDIJMoumFokt7sT-_XPqRe0jc',\n          part: 'snippet',\n          type: 'video',\n          q: pageContent.content.data,\n          maxResults: 25\n        }\n      })\n      .then((res) => res)\n      .then((data) => setResultList(data.data.items))\n\n    // setResultList(mockResults().items);\n  }, [pageContent])\n\n  const openVideo = (id) => {\n    dispatch(\n      setPageContent({\n        component: 'VideoScreen',\n        data: resultList.filter((result) => result.id.videoId === id)[0]\n      })\n    )\n  }\n\n  return (\n    <div className={classes.resultsWrapper}>\n      {resultList.map((result) => (\n        <Result\n          key={result.id.videoId}\n          videoId={result.id.videoId}\n          thumbnail={result.snippet.thumbnails.default}\n          channelTitle={result.snippet.channelTitle}\n          title={result.snippet.title}\n          openVideo={openVideo}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Results\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getPageContent } from '../redux/slices/contentSlice';\nimport { createUseStyles } from 'react-jss';\nimport { colors } from '../utilities/colors';\n\nconst useStyles = createUseStyles({\n  videoWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'black',\n    width: '100%',\n  },\n});\n\nconst Video = () => {\n  const video = useSelector(getPageContent).content.data;\n  const classes = useStyles();\n\n  let width = window.innerWidth;\n  let height = window.innerHeight;\n\n  return (\n    <div className={classes.videoWrapper}>\n      <iframe\n        title='Youtube'\n        id='ytplayer'\n        type='text/html'\n        width={width}\n        height={height > 667 ? height * 0.75 : height * 0.5}\n        src={`https://www.youtube.com/embed/${video.id.videoId}?autoplay=1&origin=http://example.com`}\n        frameBorder='0'\n        allow='autoplay'\n        allowfullscreen='allowfullscreen'\n        mozallowfullscreen='mozallowfullscreen'\n        msallowfullscreen='msallowfullscreen'\n        oallowfullscreen='oallowfullscreen'\n        webkitallowfullscreen='webkitallowfullscreen'\n      ></iframe>\n    </div>\n  );\n};\n\nexport default Video;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { createUseStyles } from 'react-jss';\nimport moment from 'moment';\nimport { colors } from '../utilities/colors';\nimport { getPageContent } from '../redux/slices/contentSlice';\n\nconst VideoInfo = () => {\n  const video = useSelector(getPageContent).content.data;\n  const useStyles = createUseStyles({\n    videoInfoWrapper: {\n      padding: '5px',\n      display: 'table',\n      margin: 'auto',\n      marginTop: '10px',\n    },\n    titleText: {\n      fontSize: '25px',\n      fontWeight: 'bold',\n      color: 'white',\n    },\n    channelText: {\n      fontSize: '20px',\n      fontWeight: 'bold',\n      color: colors.lemon,\n    },\n    dateText: {\n      fontSize: '18px',\n      color: colors.lemon,\n    },\n    descriptionText: {\n      fontSize: '18px',\n      color: colors.lemon,\n    },\n  });\n  const classes = useStyles();\n\n  const {\n    id,\n    snippet: { channelId, channelTitle, description, publishedAt, title },\n  } = video;\n\n  const publishedDate = moment(publishedAt.slice(0, 10)).format(\n    'dddd, MMMM Do YYYY'\n  );\n\n  return (\n    <div className={classes.videoInfoWrapper}>\n      <div className={classes.titleText}>{title}</div>\n      <div className={classes.channelText}>{channelTitle}</div>\n      <div className={classes.dateText}>{publishedDate}</div>\n      <div className={classes.descriptionText}>{description}</div>\n    </div>\n  );\n};\n\nexport default VideoInfo;\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Video from '../components/Video';\nimport VideoInfo from '../components/VideoInfo';\nimport { colors } from '../utilities/colors';\n\nconst VideoScreen = () => {\n  const useStyles = createUseStyles({\n    videoScreenWrapper: {\n      backgroundColor: colors.darkPurple,\n      height: '100%',\n    },\n  });\n  const classes = useStyles();\n\n  return (\n    <div className={classes.videoScreenWrapper}>\n      <Video />\n      <VideoInfo />\n    </div>\n  );\n};\n\nexport default VideoScreen;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setPageContent } from '../redux/slices/contentSlice';\nimport { createUseStyles, withTheme } from 'react-jss';\nimport { colors } from '../utilities/colors';\nimport githubLogo from '../images/github-logo-white.png';\n\nconst useStyles = createUseStyles({\n  //! Mobile Styling\n  navbarWrapper: {\n    display: 'flex',\n    padding: '0 16px',\n    backgroundColor: colors.darkBlue,\n    flexWrap: 'wrap',\n  },\n  titleWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    flexBasis: '100%',\n    marginTop: '7px',\n  },\n  titleText: {\n    fontFamily: 'Berkshire Swash, cursive',\n    fontSize: '28px',\n    color: colors.lemon,\n  },\n  searchWrapper: {\n    display: 'flex',\n    flex: 3,\n    alignItems: 'center',\n  },\n  searchForm: {\n    width: '100%',\n    margin: '7px 0',\n  },\n  searchBar: {\n    width: '75%',\n    border: 'none',\n    backgroundColor: 'transparent',\n    borderBottom: '2px white solid',\n    fontWeight: 'bold',\n    height: '20px',\n    fontSize: '15px',\n    color: colors.lemon,\n  },\n  searchButton: {\n    width: '17%',\n    height: '24px',\n    border: '2px solid white',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: '15px',\n    '&:hover': {\n      backgroundColor: 'white',\n      color: 'black',\n      cursor: 'pointer',\n    },\n  },\n  repoWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    flex: 1,\n  },\n  repoLogo: {\n    width: '30%',\n    display: 'table',\n  },\n\n  //! Tablet Styling - 768px and above\n  '@media screen and (min-width: 768px)': {\n    titleText: {\n      fontSize: '40px',\n      lineHeight: 1,\n    },\n    titleWrapper: {\n      order: 2,\n      flexBasis: 0,\n      margin: '10px 0',\n      flex: 1.5,\n    },\n    searchWrapper: {\n      order: 1,\n      flex: 1,\n    },\n    searchWrapper: {\n      flex: 2,\n    },\n    repoWrapper: {\n      order: 3,\n      justifyContent: 'flex-end',\n      flex: '.2',\n    },\n    repoLogo: {\n      height: '35px',\n      width: '35px',\n      padding: '5px',\n    },\n    searchBar: {\n      fontSize: '20px',\n      width: '90%',\n    },\n    searchButton: {\n      width: '10%',\n      fontSize: '20px',\n      height: '26px',\n    },\n  },\n});\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const [searchQuery, setSearchQuery] = useState('');\n  const classes = useStyles();\n\n  return (\n    <div className={classes.navbarWrapper}>\n      <div className={classes.titleWrapper}>\n        <div className={classes.titleText}>videobox</div>\n      </div>\n      <div className={classes.searchWrapper}>\n        <form className={classes.searchForm}>\n          <input\n            className={classes.searchBar}\n            placeholder='Search'\n            onChange={(e) => setSearchQuery(e.target.value)}\n            value={searchQuery}\n          />\n          <button\n            className={classes.searchButton}\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(\n                setPageContent({ component: 'Results', data: searchQuery })\n              );\n            }}\n            type='submit'\n          >\n            go\n          </button>\n        </form>\n      </div>\n      <div className={classes.repoWrapper}>\n        <a\n          href='https://www.github.com/rjshoemaker55'\n          target='_blank'\n          styles={{ display: 'table' }}\n        >\n          <img className={classes.repoLogo} src={githubLogo} />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getPageContent } from '../redux/slices/contentSlice';\nimport Results from './Results';\nimport VideoScreen from './VideoScreen';\nimport Navbar from '../components/Navbar';\n\nconst Landing = () => {\n  const pageContent = useSelector(getPageContent);\n\n  return (\n    <>\n      <Navbar />\n      <div className='landing-wrapper' style={{ height: '100vh' }}>\n        {pageContent.content.component === 'Results' ? (\n          <Results />\n        ) : (\n          pageContent.content.component === 'VideoScreen' && <VideoScreen />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport Landing from './pages/Landing';\nimport './App.css';\n\nfunction App() {\n  return <Landing />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
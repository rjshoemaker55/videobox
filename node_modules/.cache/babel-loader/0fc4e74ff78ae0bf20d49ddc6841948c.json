{"ast":null,"code":"import React from'react';import{useSelector}from'react-redux';import{createUseStyles}from'react-jss';import moment from'moment';import{colors}from'../utilities/colors';import{getPageContent}from'../redux/slices/contentSlice';var VideoInfo=function VideoInfo(){var video=useSelector(getPageContent).content.data;var useStyles=createUseStyles({videoInfoWrapper:{padding:'5px',display:'table',margin:'auto',marginTop:'10px'},titleText:{fontSize:'25px',fontWeight:'bold',color:'white'},channelText:{fontSize:'20px',fontWeight:'bold',color:colors.lemon},dateText:{fontSize:'18px',color:colors.lemon},descriptionText:{fontSize:'18px',color:colors.lemon}});var classes=useStyles();var id=video.id,_video$snippet=video.snippet,channelId=_video$snippet.channelId,channelTitle=_video$snippet.channelTitle,description=_video$snippet.description,publishedAt=_video$snippet.publishedAt,title=_video$snippet.title;var publishedDate=moment(publishedAt.slice(0,10)).format('dddd, MMMM Do YYYY');return/*#__PURE__*/React.createElement(\"div\",{className:classes.videoInfoWrapper},/*#__PURE__*/React.createElement(\"div\",{className:classes.titleText},title),/*#__PURE__*/React.createElement(\"div\",{className:classes.channelText},channelTitle),/*#__PURE__*/React.createElement(\"div\",{className:classes.dateText},publishedDate),/*#__PURE__*/React.createElement(\"div\",{className:classes.descriptionText},description));};export default VideoInfo;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/videobox/src/components/VideoInfo.js"],"names":["React","useSelector","createUseStyles","moment","colors","getPageContent","VideoInfo","video","content","data","useStyles","videoInfoWrapper","padding","display","margin","marginTop","titleText","fontSize","fontWeight","color","channelText","lemon","dateText","descriptionText","classes","id","snippet","channelId","channelTitle","description","publishedAt","title","publishedDate","slice","format"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,eAAT,KAAgC,WAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,MAAT,KAAuB,qBAAvB,CACA,OAASC,cAAT,KAA+B,8BAA/B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,KAAK,CAAGN,WAAW,CAACI,cAAD,CAAX,CAA4BG,OAA5B,CAAoCC,IAAlD,CACA,GAAMC,CAAAA,SAAS,CAAGR,eAAe,CAAC,CAChCS,gBAAgB,CAAE,CAChBC,OAAO,CAAE,KADO,CAEhBC,OAAO,CAAE,OAFO,CAGhBC,MAAM,CAAE,MAHQ,CAIhBC,SAAS,CAAE,MAJK,CADc,CAOhCC,SAAS,CAAE,CACTC,QAAQ,CAAE,MADD,CAETC,UAAU,CAAE,MAFH,CAGTC,KAAK,CAAE,OAHE,CAPqB,CAYhCC,WAAW,CAAE,CACXH,QAAQ,CAAE,MADC,CAEXC,UAAU,CAAE,MAFD,CAGXC,KAAK,CAAEf,MAAM,CAACiB,KAHH,CAZmB,CAiBhCC,QAAQ,CAAE,CACRL,QAAQ,CAAE,MADF,CAERE,KAAK,CAAEf,MAAM,CAACiB,KAFN,CAjBsB,CAqBhCE,eAAe,CAAE,CACfN,QAAQ,CAAE,MADK,CAEfE,KAAK,CAAEf,MAAM,CAACiB,KAFC,CArBe,CAAD,CAAjC,CA0BA,GAAMG,CAAAA,OAAO,CAAGd,SAAS,EAAzB,CA5BsB,GA+BpBe,CAAAA,EA/BoB,CAiClBlB,KAjCkB,CA+BpBkB,EA/BoB,gBAiClBlB,KAjCkB,CAgCpBmB,OAhCoB,CAgCTC,SAhCS,gBAgCTA,SAhCS,CAgCEC,YAhCF,gBAgCEA,YAhCF,CAgCgBC,WAhChB,gBAgCgBA,WAhChB,CAgC6BC,WAhC7B,gBAgC6BA,WAhC7B,CAgC0CC,KAhC1C,gBAgC0CA,KAhC1C,CAmCtB,GAAMC,CAAAA,aAAa,CAAG7B,MAAM,CAAC2B,WAAW,CAACG,KAAZ,CAAkB,CAAlB,CAAqB,EAArB,CAAD,CAAN,CAAiCC,MAAjC,CACpB,oBADoB,CAAtB,CAIA,mBACE,2BAAK,SAAS,CAAEV,OAAO,CAACb,gBAAxB,eACE,2BAAK,SAAS,CAAEa,OAAO,CAACR,SAAxB,EAAoCe,KAApC,CADF,cAEE,2BAAK,SAAS,CAAEP,OAAO,CAACJ,WAAxB,EAAsCQ,YAAtC,CAFF,cAGE,2BAAK,SAAS,CAAEJ,OAAO,CAACF,QAAxB,EAAmCU,aAAnC,CAHF,cAIE,2BAAK,SAAS,CAAER,OAAO,CAACD,eAAxB,EAA0CM,WAA1C,CAJF,CADF,CAQD,CA/CD,CAiDA,cAAevB,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { createUseStyles } from 'react-jss';\nimport moment from 'moment';\nimport { colors } from '../utilities/colors';\nimport { getPageContent } from '../redux/slices/contentSlice';\n\nconst VideoInfo = () => {\n  const video = useSelector(getPageContent).content.data;\n  const useStyles = createUseStyles({\n    videoInfoWrapper: {\n      padding: '5px',\n      display: 'table',\n      margin: 'auto',\n      marginTop: '10px',\n    },\n    titleText: {\n      fontSize: '25px',\n      fontWeight: 'bold',\n      color: 'white',\n    },\n    channelText: {\n      fontSize: '20px',\n      fontWeight: 'bold',\n      color: colors.lemon,\n    },\n    dateText: {\n      fontSize: '18px',\n      color: colors.lemon,\n    },\n    descriptionText: {\n      fontSize: '18px',\n      color: colors.lemon,\n    },\n  });\n  const classes = useStyles();\n\n  const {\n    id,\n    snippet: { channelId, channelTitle, description, publishedAt, title },\n  } = video;\n\n  const publishedDate = moment(publishedAt.slice(0, 10)).format(\n    'dddd, MMMM Do YYYY'\n  );\n\n  return (\n    <div className={classes.videoInfoWrapper}>\n      <div className={classes.titleText}>{title}</div>\n      <div className={classes.channelText}>{channelTitle}</div>\n      <div className={classes.dateText}>{publishedDate}</div>\n      <div className={classes.descriptionText}>{description}</div>\n    </div>\n  );\n};\n\nexport default VideoInfo;\n"]},"metadata":{},"sourceType":"module"}
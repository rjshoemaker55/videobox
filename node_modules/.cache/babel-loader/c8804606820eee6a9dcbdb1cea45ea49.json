{"ast":null,"code":"var _jsxFileName = \"/Users/rjshoemaker/Documents/code/projects/videobox/src/pages/Results.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createUseStyles } from 'react-jss';\nimport { getPageContent, setPageContent } from '../redux/slices/contentSlice';\nimport { mockResults } from '../mockResults';\nimport Result from '../components/Result';\nimport { colors } from '../utilities/colors';\n\nconst axios = require('axios');\n\nconst useStyles = createUseStyles({\n  //! Mobile styling\n  resultsWrapper: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    gridGap: '5px',\n    padding: '5px',\n    backgroundColor: colors.marroon\n  },\n  //! Tablet styling - 768px and above\n  '@media screen and (min-width: 768px) and (max-width: 991px)': {\n    resultsWrapper: {\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr',\n      gridGap: '5px',\n      padding: '5px'\n    }\n  },\n  //! Laptop/desktop styling - 992px and above\n  '@media screen and (min-width: 992px)': {\n    resultsWrapper: {\n      gridTemplateColumns: '1fr 1fr 1fr 1fr'\n    }\n  }\n});\n\nconst Results = props => {\n  const [resultList, setResultList] = useState([]);\n  const pageContent = useSelector(getPageContent);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (!pageContent.content.data) return;\n    axios.get('https://www.googleapis.com/youtube/v3/search', {\n      params: {\n        key: process.env.REACT_APP_API_KEY,\n        part: 'snippet',\n        type: 'video',\n        q: pageContent.content.data,\n        maxResults: 25\n      }\n    }).then(res => res).then(data => setResultList(data.data.items)); // setResultList(mockResults().items);\n  }, [pageContent]);\n\n  const openVideo = id => {\n    dispatch(setPageContent({\n      component: 'VideoScreen',\n      data: resultList.filter(result => result.id.videoId === id)[0]\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.resultsWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, resultList.map(result => /*#__PURE__*/React.createElement(Result, {\n    key: result.id.videoId,\n    videoId: result.id.videoId,\n    thumbnail: result.snippet.thumbnails.default,\n    channelTitle: result.snippet.channelTitle,\n    title: result.snippet.title,\n    openVideo: openVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Results;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/videobox/src/pages/Results.js"],"names":["React","useEffect","useState","useSelector","useDispatch","createUseStyles","getPageContent","setPageContent","mockResults","Result","colors","axios","require","useStyles","resultsWrapper","display","gridTemplateColumns","gridGap","padding","backgroundColor","marroon","Results","props","resultList","setResultList","pageContent","dispatch","classes","content","data","get","params","key","process","env","REACT_APP_API_KEY","part","type","q","maxResults","then","res","items","openVideo","id","component","filter","result","videoId","map","snippet","thumbnails","default","channelTitle","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createUseStyles } from 'react-jss';\nimport { getPageContent, setPageContent } from '../redux/slices/contentSlice';\nimport { mockResults } from '../mockResults';\nimport Result from '../components/Result';\nimport { colors } from '../utilities/colors';\nconst axios = require('axios');\n\nconst useStyles = createUseStyles({\n  //! Mobile styling\n  resultsWrapper: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    gridGap: '5px',\n    padding: '5px',\n    backgroundColor: colors.marroon,\n  },\n  //! Tablet styling - 768px and above\n  '@media screen and (min-width: 768px) and (max-width: 991px)': {\n    resultsWrapper: {\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr',\n      gridGap: '5px',\n      padding: '5px',\n    },\n  },\n  //! Laptop/desktop styling - 992px and above\n  '@media screen and (min-width: 992px)': {\n    resultsWrapper: {\n      gridTemplateColumns: '1fr 1fr 1fr 1fr',\n    },\n  },\n});\n\nconst Results = (props) => {\n  const [resultList, setResultList] = useState([]);\n  const pageContent = useSelector(getPageContent);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (!pageContent.content.data) return;\n    axios\n      .get('https://www.googleapis.com/youtube/v3/search', {\n        params: {\n          key: process.env.REACT_APP_API_KEY,\n          part: 'snippet',\n          type: 'video',\n          q: pageContent.content.data,\n          maxResults: 25,\n        },\n      })\n      .then((res) => res)\n      .then((data) => setResultList(data.data.items));\n\n    // setResultList(mockResults().items);\n  }, [pageContent]);\n\n  const openVideo = (id) => {\n    dispatch(\n      setPageContent({\n        component: 'VideoScreen',\n        data: resultList.filter((result) => result.id.videoId === id)[0],\n      })\n    );\n  };\n\n  return (\n    <div className={classes.resultsWrapper}>\n      {resultList.map((result) => (\n        <Result\n          key={result.id.videoId}\n          videoId={result.id.videoId}\n          thumbnail={result.snippet.thumbnails.default}\n          channelTitle={result.snippet.channelTitle}\n          title={result.snippet.title}\n          openVideo={openVideo}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}